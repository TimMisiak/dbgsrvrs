name: Build and Release for Windows

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version Number'  # Description for the input
        required: true                 # Make this input required
        default: '1.0.0'               # Default value if none is provided

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      # Set up Rust environment
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-pc-windows-msvc # Targeting Windows MSVC

      # Build Rust project
      - name: Build Rust project
        run: |
          cargo build --release --target x86_64-pc-windows-msvc

      # Download NuGet package
      - name: Download NuGet package
        run: |
          Invoke-WebRequest -Uri "https://www.nuget.org/api/v2/package/Microsoft.Debugging.Platform.DbgEng/20230731.1609.0" -OutFile "package.nupkg"
        working-directory: ${{ github.workspace }}

      # Extract files from NuGet package
      - name: Extract necessary files
        run: |
          Expand-Archive -Path package.nupkg -DestinationPath nuget_files
          Copy-Item nuget_files\content\amd64\* target\x86_64-pc-windows-msvc\release
        working-directory: ${{ github.workspace }}

      # Publish as a release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false

      - name: Archive files
        run: Compress-Archive -Path .\target\x86_64-pc-windows-msvc\release\*.dll, .\target\x86_64-pc-windows-msvc\release\*.exe, .\target\x86_64-pc-windows-msvc\release\deps\dbgsrvrs.pdb -DestinationPath .\release.zip
        shell: pwsh

      - name: List files in the directory
        run: Get-ChildItem
        shell: pwsh
        working-directory: ${{ github.workspace }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\release.zip
          asset_name: DbgSrvRs.zip
          asset_content_type: application/zip
